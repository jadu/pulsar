/*
 * Usage
 * Dimensions need to be specified on the element, for example:
 * <div class="skeleton-item" style="width: 40%; height: 16px; margin: 4px 0"></div>
 */

$skeleton-animation-duration: 1s;
$skeleton-border-radius: 4px;
$skeleton-color-background: color(gray, lightest);
$skeleton-color-highlight: lighten($skeleton-color-background, 7%);

@-webkit-keyframes skeleton-shimmer {
    0% {
        transform: translate3d(-100%, 0, 0);
    }
    100% {
        transform: translate3d(100%, 0, 0);
    }
}

@keyframes skeleton-shimmer {
    0% {
        transform: translate3d(-100%, 0, 0);
    }
    100% {
        transform: translate3d(100%, 0, 0);
    }
}

// Generic skeleton item, use inline style to set dimensions
%skeleton-item,
.skeleton-item {
  background: $skeleton-color-background;
  border-radius: $skeleton-border-radius;
  position: relative;
  overflow: hidden;
  will-change: transform;

    &::after {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, $skeleton-color-background, $skeleton-color-highlight, $skeleton-color-background);
        animation: skeleton-shimmer $skeleton-animation-duration ease-in-out infinite;
    }
}

// Specific skeletons items
.timeline-avatar-skeleton {
    @extend %skeleton-item;
    display: none;

    &::after {
        border-radius: 50%;
    }

    @include respond-min($screen-tablet) {
        border-radius: 50%;
        box-shadow: 0 0 0 4px color(white), inset 0 2px 0 rgba(#000, .08), 0 3px 0 4px rgba(#000, .05);
        display: block;
        height: 40px;
        left: 0;
        margin-left: 1em;
        position: absolute;
        top: 0;
        transform-style: preserve-3d;
        width: 40px;
    }
}

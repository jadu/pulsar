/**
 * -----------------------------------------------------------------------------
 *  _buttons.scss
 * -----------------------------------------------------------------------------
 *
 * Interface buttons can be links, buttons or submit inputs and can be used
 * anywhere in the UI for different needs.
 *
 * Example:
 *
 * <a class="button [button--modifier]" role="button" href="#">Button text</a>
 * <button class="button [button--modifier]" type="submit">Button text</button>
 * <input class="button [button--modifier]" type="submit" value="Button text">
 */

/**
 * Button constructor
 *
 * 1. Corrects inability to style clickable `input` types in iOS
 * 2. Normalize `box-sizing` across all elements that this component could be
 *    applied to.
 * 3. Inherit text color from ancestor.
 * 4. Normalize `line-height`. Cannot be changed from `normal` in Firefox 4+.
 * 5. Prevent button text from being selectable.
 * 6. Prevent wrapping across multiple lines.
 * 7. Remove excess padding and border in Firefox 4+
 */

$btn-padding-top:           10px;
$btn-padding-bottom:        7px;
$btn-padding-x:             14px;

$btn-small-padding-top:     $btn-padding-top / 2.5;
$btn-small-padding-bottom:  $btn-padding-bottom / 2.5;
$btn-small-padding-x:       $btn-padding-x / 2.5;

// Stop compressed grunt output converting `.btn--white` to `.btn--#fff`
// https://github.com/jadu/pulsar/pull/502
// scss-lint:disable StringQuotes
$btn-white:                 'white';
// scss-lint:enable StringQuotes

.btn {
    @include inline-block;
    -webkit-appearance: none; /* 1 */
    background: transparent;
    border: 0;
    border-bottom-style: solid;
    border-radius: $border-radius;
    -moz-box-sizing: border-box;
    box-sizing: border-box; /* 2 */
    color: inherit; /* 3 */
    cursor: pointer;
    font-size: 14px;
    font-weight: normal;
    line-height: normal; /* 4 */
    margin: 0;
    padding: $btn-padding-top $btn-padding-x $btn-padding-bottom;
    position: relative;
    text-align: center;
    text-decoration: none;
    -moz-user-select: none;
    -ms-user-select: none;
    -webkit-user-select: none;
    user-select: none; /* 5 */
    vertical-align: top;
    white-space: nowrap; /* 6 */

    &::-moz-focus-inner { /* 7 */
        border: 0;
        padding: 0;
    }

    &:hover,
    &.is-hovered {
        top: 1px;
    }

    &:active,
    &.active {
        top: 2px;
    }

    &:disabled,
    &.is-disabled,
    &.disabled {
        cursor: not-allowed !important; // immutable
        opacity: .5;
    }
}

/**
 * Mixin to theme button states
 */

@mixin button-color($state) {
    background-color: color($state);
    box-shadow: 0 2px 0 darken(color($state), 10);
    color: color($state, alt) !important; // immutable
}

@mixin button-hover($state) {
    background-color: color($state);
    box-shadow: 0 1px 0 darken(color($state), 10);
    color: color($state, alt) !important;  // immutable
}

@mixin button-active($state) {
    background-color: darken(color($state), 5);
    box-shadow: 0 0 0 darken(color($state), 10);
}

@mixin button-states($state) {
    @include button-color($state);

    &:hover,
    &.is-hovered {
      @include button-hover($state);
    }

    &:active,
    &.active {
        @include button-active($state);
    }

    &:disabled,
    &.is-disabled,
    &.disabled {
        &.btn--naked {
            color: color($state, dark) !important; // immutable

            &:active,
            &.active {
                background-color: transparent !important; // immutable
                color: color($state, dark) !important; // immutable
            }
        }
    }

    > .badge {
        background-color: color($state, dark);
        color: pick_best_color(color($state, dark), (#fff, color(gray, dark))) !important; // immutable

        &.badge--outline {
            background-color: transparent;
            color: inherit !important; // immutable
        }
    }

    &.btn--naked {
        color: color($state, dark) !important; // immutable

        &:active,
        &.active {
            background-color: color($state, light) !important; // immutable
            color: color($state, dark) !important; // immutable

            &:not(:disabled):not(.is-disabled).btn--#{$btn-white} {
                color: color(text) !important; // immutable
            }
        }
    }
}

/**
 * UI states
 */

.btn {
    @include button-states('base');
}

@each $state, $state-color, $state-color-alt in $state-colors {
    .btn--#{$state} {
        @include button-states($state);
    }
}

.btn--outline {
    background: none !important;
    border: 2px solid color(base);
    box-shadow: none;
    padding: ($btn-padding-top - 2) ($btn-padding-x - 2) $btn-padding-bottom;

    &:hover,
    &.is-hovered {
        box-shadow: none;
        padding-bottom: $btn-padding-bottom - 1;
    }

    &:active,
    &.active {
        background-color: color(base, light) !important;
        box-shadow: none;
        color: pick_best_color(color(base, light), (#fff, color(gray, dark))) !important;
        padding-bottom: $btn-padding-bottom - 2;
    }

    &.is-disabled,
    &:disabled {
        background-color: transparent !important;
        box-shadow: none !important;
        color: color(text, disabled) !important;
    }

    &.btn--naked {
        padding: $btn-padding-top $btn-padding-x $btn-padding-bottom !important;
    }

    &.btn--small {
        padding: ($btn-small-padding-top - 2) ($btn-small-padding-x - 2) ($btn-small-padding-bottom - 2) !important;

        &.btn--naked {
           padding: $btn-small-padding-top $btn-small-padding-x $btn-small-padding-bottom !important;
        }
    }

    @each $state, $state-color, $state-color-alt in $state-colors {
        &.btn--#{$state} {
            border: 2px solid $state-color !important;
            box-shadow: none !important;
            color: color($state, dark) !important;

            &:active,
            &.active {
                background-color: color($state, light) !important;
                color: color($state, dark) !important;

                &.btn--#{$btn-white} {
                    color: color(text) !important;
                }
            }

            &.is-disabled,
            &:disabled {
                &:active,
                &.active {
                    background-color: transparent !important;

                    &.btn--#{$btn-white} {
                        color: color($state, dark) !important;
                    }
                }
            }

            &.btn--naked {
                border: 0 !important;
                box-shadow: none !important;

                &:active,
                &.active {
                    color: color($state, dark) !important;

                    &.btn--#{$btn-white} {
                        color: color(text) !important;
                    }
                }

                &.is-disabled,
                &:disabled {
                    &:active,
                    &.active {
                        color: color($state) !important;
                    }
                }
            }
        }
    }

    &.btn--naked {
        box-shadow: none !important;
    }
}

.btn--naked,
.btn--naked > .btn {
    background: none;
    border: 0;
    box-shadow: none;
    color: color(text) !important;

    // IE8 fix btn--naked background and border
    @include ie-lte(8) {
        background: none;
        border: 0;
        box-shadow: none;
    }

    &:active,
    &.active,
    &:hover,
    &.is-hovered {
        box-shadow: none;
    }

    &.is-disabled,
    &:disabled {
        background: none !important;
        box-shadow: none !important;
        color: color(text, disabled) !important;
    }
}

.btn--naked.btn__group.open .dropdown__toggle {
    box-shadow: none;
}

.btn--#{$btn-white} {
    &.is-disabled,
    &:disabled {
        opacity: .5;
    }
}

.btn--small {
    font-size: 12px !important;
    padding: $btn-small-padding-top $btn-small-padding-x $btn-small-padding-bottom !important;
}

// The text in small, disabled buttons look like garbage on low-dpi screens,
// so we'll disable font smoothing for this edge case (and re-enable it
// for hi-dpi screens).
.btn--#{$btn-white},
.btn--naked {
    &.is-disabled,
    &:disabled {
        -webkit-font-smoothing: none;

        @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
            -webkit-font-smoothing: subpixel-antialiased;
        }
    }
}

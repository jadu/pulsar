# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/use-cases-and-examples/building-and-testing/building-and-testing-nodejs

name: JavaScript Tests

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test:
    name: Node ${{ matrix.node-version }}
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    strategy:
      fail-fast: false
      matrix:
        node-version: [18, 20]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Setup npm authentication
      run: |
        # Configure npm for FontAwesome and GitHub Packages
        echo "//npm.fontawesome.com/:_authToken=${FONTAWESOME_TOKEN}" > .npmrc
        echo "//npm.pkg.github.com/:_authToken=${GITHUB_TOKEN}" >> .npmrc
      env:
        FONTAWESOME_TOKEN: ${{ secrets.FONTAWESOME_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Install dependencies
      run: |
        # Try installing dependencies, falling back to ignoring scripts if needed
        npm ci || npm ci --ignore-scripts
    
    - name: Build project
      run: npm run build --if-present
    
    - name: Install Puppeteer dependencies
      run: |
        # Install minimal dependencies for Puppeteer
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends \
          libx11-xcb1 \
          libxcomposite1 \
          libxcursor1 \
          libxdamage1 \
          libxi6 \
          libxtst6 \
          libnss3 \
          libcups2 \
          libxss1 \
          libxrandr2 \
          libglib2.0-0 \
          libasound2t64 \
          libatk1.0-0 \
          libatk-bridge2.0-0 \
          libpangocairo-1.0-0 \
          libgtk-3-0
    
    - name: Run tests with Mochify
      run: |
        # Set environment variables to use headless Chrome with required flags
        export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
        export CHROME_BIN=$(which google-chrome-stable)
        export CHROME_PATH=$CHROME_BIN
        
        # Run tests with Mochify using Puppeteer as driver
        npx mochify \
          --driver puppeteer \
          --driver-option.headless true \
          --driver-option.args="--no-sandbox,--disable-setuid-sandbox" \
          --reporter spec \
          --transform [ babelify ] \
          ./tests/harness/common './tests/js/web/**/*Test.js'
      
    - name: Upload artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-node-${{ matrix.node-version }}
        path: ./coverage/
        if-no-files-found: ignore

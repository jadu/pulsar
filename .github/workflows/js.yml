# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Run JS test suite

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test:
    name: Node.js ${{ matrix.node-version }} Test
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    strategy:
      fail-fast: false
      matrix:
        node-version: [18, 20]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
        
    - name: Setup Node.js ${{ matrix.node-version }}
      id: setup-node
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Setup FontAwesome credentials
      if: env.FONTAWESOME_TOKEN != ''
      run: npm config set '//npm.fontawesome.com/:_authToken' "${{ secrets.FONTAWESOME_TOKEN }}"
      env:
        FONTAWESOME_TOKEN: ${{ secrets.FONTAWESOME_TOKEN }}
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build
      run: npm run build --if-present
    
    - name: Configure Chrome for headless testing
      run: |
        # Set environment variables for Chrome
        echo 'export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true' >> $GITHUB_ENV
        echo 'export CHROME_BIN=/usr/bin/google-chrome' >> $GITHUB_ENV
        
        # Install Chrome and its dependencies
        # Uses apt install instead of apt-get and avoids specifying every dependency
        sudo apt update
        sudo apt install -y google-chrome-stable xvfb
        
        # Create a simple wrapper script for running tests with proper flags
        cat > run-tests.sh << EOF
        #!/bin/bash
        NODE_OPTIONS="--max-old-space-size=4096" xvfb-run -a npm test
        EOF
        chmod +x run-tests.sh
    
    - name: Run tests
      run: ./run-tests.sh
      env:
        # Pass required Chrome flags through environment variables
        CHROMIUM_FLAGS: "--no-sandbox --disable-setuid-sandbox --disable-dev-shm-usage"
      
    - name: Upload test artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: js-test-results-node-${{ matrix.node-version }}
        path: |
          ./coverage/
          ./tests/js/web/index.html
        if-no-files-found: ignore
        retention-days: 7

{% extends "form_div_layout.html.twig" %}

{# Remove the surrounding div #}
{% block form_widget_compound %}
    {%- if form is rootform -%}
        {{ form_errors(form) }}
    {%- endif -%}
    {{- block('form_rows') -}}
    {{- form_rest(form) -}}
{% endblock form_widget_compound %}

{% block choice_widget_expanded %}
    {% if choices_style is defined and choices_style == 'inline' %}
        <div class="controls" {{ block('widget_container_attributes') }}>
            {% for child in form %}
                <label class="control__label" for="{{ child.vars.id }}">
                    {{- form_widget(child, {attr: {'class': 'checkbox'}}) -}}
                    {{- child.vars.label -}}
                </label>
            {% endfor %}
        </div>
    {% else %}
        {% for child in form %}
            <label class="control__label">
                {{- form_widget(child, {attr: attr}) -}}
                {{- child.vars.label|trans({}, translation_domain) -}}
            </label>
        {% endfor %}
    {% endif %}
{% endblock choice_widget_expanded %}

{% block choice_widget_collapsed %}
    {% set attr = attr|merge({'class': (attr.class|default('') ~ ' form__control select')|trim}) %}
    {{ parent() }}
{% endblock choice_widget_collapsed %}

{% block checkbox_widget %}
    {% if attr['data-toggle-switch'] is defined %}
        {% set attr = attr|merge({'class': (attr.class|default('') ~ ' toggle-switch')|trim}) %}
    {% endif %}
    {% set attr = attr|merge({'class': (attr.class|default('') ~ ' form__control checkbox')|trim}) %}
    {{ parent() }}
{% endblock checkbox_widget %}

{% block radio_widget %}
    {% set attr = attr|merge({'class': (attr.class|default('') ~ ' form__control radio')|trim}) %}
    {{ parent() }}
{% endblock radio_widget %}

{%- block date_widget -%}
    {# Force date widgets to be text for pickaday #}
    {%- set type = 'text' -%}
    {%- set attr = attr|merge({'data-datepicker': 'true'|trim, 'placeholder': attr.placeholder|default('dd/mm/yyyy')}) -%}
    {{ parent() }}
{%- endblock date_widget -%}

{% block file_widget %}
    {%- set attr = attr|merge({'class': (attr.class|default('') ~ ' form__control file')|trim}) -%}
    {{- block('form_widget_simple') -}}
{% endblock file_widget %}

{% block money_widget -%}
    {% set prepend = not (money_pattern starts with '{{') %}
    {% set append = not (money_pattern ends with '}}') %}
    {% if prepend %}
        {% set attr = attr|merge({'data-prepend-text': money_pattern|form_encode_currency }) %}
    {% endif %}
    {% if append %}
        {% set attr = attr|merge({'data-append-text': money_pattern|form_encode_currency }) %}
    {% endif %}
    {{- block('form_widget_simple') -}}
{%- endblock money_widget %}

{% block percent_widget -%}
    {% set attr = attr|merge({'data-append-text': '%' }) %}
    {{- block('form_widget_simple') -}}
{%- endblock percent_widget %}

{%- block telephone_widget -%}
    {%- set type = type|default('tel') -%}
    {{ block('form_widget_simple') }}
{%- endblock telephone_widget -%}

{% block textarea_widget %}
    {% set attr = attr|merge({'class': (attr.class|default('') ~ ' form__control textarea')|trim}) %}
    {{ parent() }}
{% endblock textarea_widget %}

{# Need to copy this whole block because unable to add the util.required #}
{%- block form_label -%}
    {% import '@pulsar/pulsar/v2/helpers/util.html.twig' as util %}
    {% if label is not same as(false) -%}
        {% if not compound -%}
            {% set label_attr = label_attr|merge({'for': id}) %}
        {%- endif -%}
        {% set label_attr = label_attr|merge({'class': (label_attr.class|default('') ~ ' control__label')|trim}) %}
        {# {% if required is defined and required != false -%}
            {% set label_attr = label_attr|merge({'class': (label_attr.class|default('') ~ ' required')|trim}) %}
        {%- endif -%} #}
        {% if label is empty -%}
            {%- if label_format is not empty -%}
                {% set label = label_format|replace({
                    '%name%': name,
                    '%id%': id,
                }) %}
            {%- else -%}
                {% set label = name|humanize %}
            {%- endif -%}
        {%- endif -%}
        {%- if attr['data-toggle-switch'] is defined -%}
        <span{% for attrname, attrvalue in label_attr %} {{ attrname }}="{{ attrvalue }}"{% endfor %}>
        {%- else -%}
        <label{% for attrname, attrvalue in label_attr %} {{ attrname }}="{{ attrvalue }}"{% endfor %}>
        {%- endif -%}
        {%- if translation_domain is same as(false) -%}
            {{- label -}}
        {%- else -%}
            {{- label|trans({}, translation_domain) -}}
        {%- endif -%}
        {{ util.required(required|default(false)) }}
        {{ util.guidance(attr['data-guidance-text']|default, { 'guidance-container': attr['data-guidance-container']|default }) }}
        {%- if attr['data-toggle-switch'] is defined -%}
        </span>
        {%- else -%}
        </label>
        {%- endif -%}
    {%- endif -%}
{%- endblock form_label -%}

{% block repeated_row %}
    {#
    No need to render the errors here, as all errors are mapped
    to the first child (see RepeatedTypeValidatorExtension).
    #}
    {{- block('form_rows_repeated') -}}
{% endblock repeated_row %}

{# Main form_row block, used to generate complete form rows including pulsar mark up and labels/fields#}
{% block form_row %}
    {% spaceless %}
        {% set groupClass = '' %}

        {% if prependIcon is defined and prependIcon is not empty %}
            {% set attr = attr|merge({'data-prepend-icon': prependIcon}) %}
        {% endif %}

        {% if appendIcon is defined and appendIcon is not empty %}
            {% set attr = attr|merge({'data-append-icon': appendIcon}) %}
        {% endif %}

        {% if attr['data-datepicker'] is defined %}
            {% set attr = attr|merge({'data-append-icon': 'icon-calendar'}) %}
        {% endif %}

        {% if attr.class is defined and 'colorpicker' in attr.class %}
            {% set attr = attr|merge({'data-prepend-text': '#'}) %}
        {% endif %}

        {% if inputClass is defined and 'toggle-switch' in inputClass %}
            {% set attr = attr|merge({'data-toggle-switch': 'true'}) %}
        {% endif %}

        {% if 'radio' in form.vars.block_prefixes %}
            {% set groupClass = ' form-radio' %}
        {% elseif 'checkbox' in form.vars.block_prefixes %}
            {% set groupClass = ' form-checkbox' %}
        {% elseif 'range' in form.vars.block_prefixes %}
            {% set groupClass = ' form-range' %}
        {% endif %}

        <div class="form__group{% if errors|length > 0 %} has-error{% endif %}{% if attr['data-toggle-switch'] is defined %} form__group--toggle{% endif %}{{ groupClass }}">
            {% if attr['data-toggle-switch'] is defined %}
            <label class="toggle-switch-wrapper-label" for="{{ id }}">
            {% endif %}
            {{ form_label(form) }}
            <div class="controls">

                {# Build aria-described guids for help blocks and errors #}
                {% set describedByIds = [] %}
                {% set helpId = null %}

                {# If errors are present, mark field as invalid and build error block guids  #}
                {% if errors|length > 0 %}
                    {% set attr = attr|merge({ 'aria-invalid': 'true' }) %}

                    {% for error in errors %}
                        {% set describedByIds = describedByIds|merge([id ~ '--error_' ~ loop.index0] ) %}
                    {% endfor %}
                {% endif %}

                {# If help text are present, build help block guids  #}
                {%
                    if (attr['data-help-text'] is defined and attr['data-help-text'] is not null)
                    or (attr['data-help-html'] is defined and attr['data-help-html'] is not null)
                %}
                    {# need to separate out the help block guids #}
                    {% set helpId = 'guid-' ~ random() %}

                    {# Merge into describedByIds for aria-describedby on the input #}
                    {% set describedByIds = describedByIds|merge([helpId]) %}
                {% endif %}

                {# If we have describedByIds, add aria-describedby to attr #}
                {% if describedByIds is defined and describedByIds is not empty %}
                    {% set attr = attr|merge({ 'aria-describedby': describedByIds|join(' ') }) %}
                {% endif %}

                {# If extra input specific classes are present, add to input/widget #}
                {% if inputClass is defined %}
                    {% set attr = attr|merge({'class': inputClass|trim}) %}
                {% endif %}

                {{ form_widget(form, {attr: attr}) }}

                {% if attr['data-toggle-switch'] is defined %}
                    <span class="toggle-switch-label"></span>
                {% endif %}

                {{ form_errors(form) }}

                {# Help #}
                {% if attr['data-help-text'] is defined and attr['data-help-text'] is not null %}
                    <span class="help-block" id="{{ helpId }}">{{ attr['data-help-text'] }}</span>
                {% elseif attr['data-help-html'] is defined and attr['data-help-html'] is not null %}
                    <span class="help-block" id="{{ helpId }}">{{ attr['data-help-html']|raw }}</span>
                {% endif %}
            </div>
            {% if attr['data-toggle-switch'] is defined %}
            </label>
            {% endif %}
        </div>
    {% endspaceless %}
{% endblock form_row %}

{% block form_widget_simple %}
    {% set attr = attr|merge({'class': (attr.class|default('') ~ ' form__control')|trim}) %}

    {# Stop hidden fields having invalid required attibute #}
    {% if type is defined and type == 'hidden' %}
        {% set required = false %}
    {% endif %}

    {% if attr['data-prepend-text'] is defined or attr['data-append-text'] is defined or attr['data-prepend-icon'] is defined or attr['data-append-icon'] is defined %}
        <div class="input-group">
            {% if attr['data-prepend-icon'] is defined %}
                <span class="input-group-addon"><i class="{{ attr['data-prepend-icon'] }} icon-fw"></i></span>
            {% endif %}
            {% if attr['data-prepend-text'] is defined %}
                <span class="input-group-addon">{{ attr['data-prepend-text'] }}</span>
            {% endif %}
    {% endif %}

    {{ parent() }}

    {% if attr['data-prepend-text'] is defined or attr['data-append-text'] is defined or attr['data-prepend-icon'] is defined or attr['data-append-icon'] is defined %}
            {% if attr['data-append-text'] is defined %}
                <span class="input-group-addon">{{ attr['data-append-text'] }}</span>
            {% endif %}
            {% if attr['data-append-icon'] is defined %}
                <span class="input-group-addon"><i class="{{ attr['data-append-icon'] }} icon-fw"></i></span>
            {% endif %}
        </div>
    {% endif %}
{% endblock form_widget_simple %}

{% block button_row %}
    <div class="form__group">
        {{- form_widget(form) -}}
    </div>
{% endblock button_row %}

{%- block button_widget -%}
    {% set attr = attr|merge({'class': 'btn ' ~ (attr.class|default(''))|trim}) %}
    {{ parent() }}
{%- endblock button_widget -%}

{# Misc #}

{%- block form_start -%}
    {% set attr = attr|merge({'class': (attr.skipDefaultClasses is not defined ? 'form' : '') ~ (attr.class is defined ? ' ' ~ attr.class : '')}) %}
    {{ parent() }}
{%- endblock form_start -%}

{% block form_errors %}
    {% spaceless %}
        {% for error in errors %}
            <p class="help-block is-error" id="{{ id ~ '--error_' ~ loop.index0 }}">
                <i aria-hidden="true" class="icon-warning-sign"></i> {{ error.message|trans }}
            </p>
        {% endfor %}
    {% endspaceless %}
{% endblock form_errors %}

{# Used when form_row is used to generate a group of compound fields, such as a group of check boxes #}
{% block form_rows %}
    {% spaceless %}
        {% for child in form %}
            <label class="control__label">
                {{ form_widget(child, {attr: attr}) }}
                {% if child.vars.label is defined and child.vars.label is not empty %}
                    {{- child.vars.label|trans({}, translation_domain) -}}
                {% else %}
                    {{- child.vars.name|trans({}, translation_domain) -}}
                {% endif %}
            </label>
        {% endfor %}
    {% endspaceless %}
{% endblock form_rows %}

{# Used when form_row is used to generate a group of repeated fields, such as 2 text inputs #}
{% block form_rows_repeated %}
    {% spaceless %}
        {% for child in form %}
            {{ form_row(child, {attr: repeated_attr is defined ? repeated_attr : {}}) }}
        {% endfor %}
    {% endspaceless %}
{% endblock form_rows_repeated %}

{%- block widget_attributes -%}
    {% set attr = attr|merge({'id': id, 'name': full_name, 'disabled': disabled, 'required': required}) %}
    {{ block('attributes') }}
{%- endblock widget_attributes -%}

{%- block widget_container_attributes -%}
    {%- if id is not empty %}
        {% set attr = attr|merge({'id': id}) %}
    {% endif -%}
    {{ block('attributes') }}
{%- endblock widget_container_attributes -%}

{%- block button_attributes -%}
    {% set attr = attr|merge({'id': id, 'name': name, 'disabled': disabled}) %}
    {{ block('attributes') }}
{%- endblock button_attributes -%}

{% block attributes -%}
    {% set print_attr = {} %}
    {%- for attrname, attrvalue in attr -%}
        {%- if attrname in ['placeholder', 'title'] -%}
            {% set print_attr = print_attr|merge({(attrname): translation_domain is same as(false) ? attrvalue : attrvalue|trans({}, translation_domain)}) %}
        {% else %}
            {% set print_attr = print_attr|merge({(attrname): attrvalue}) %}
        {%- endif -%}
    {%- endfor -%}
    {{ attributes(print_attr|exclude('data-help-text data-guidance-container data-guidance-text data-append-text data-prepend-text')) }}
{%- endblock attributes -%}

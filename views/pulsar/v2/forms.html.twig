{% extends "form_div_layout.html.twig" %}

{# Remove the surrounding div #}
{% block form_widget_compound %}
    {%- if form is rootform -%}
        {{ form_errors(form) }}
    {%- endif -%}
    {{- block('form_rows') -}}
    {{- form_rest(form) -}}
{% endblock form_widget_compound %}

{% block choice_widget_expanded %}
    {% if choices_style is defined and choices_style == 'inline' %}
        <div class="controls" {{ block('widget_container_attributes') }}>
            {% for child in form %}
                <label class="control__label" for="{{ child.vars.id }}">
                    {{- form_widget(child, {attr: attr}) -}}
                    <span class="form-choice__label">{{- child.vars.label|trans({}, translation_domain) -}}</span>
                </label>
            {% endfor %}
        </div>
    {% else %}
        {% for child in form %}
            <label for="{{ child.vars.id }}" class="control__label">
                {{- form_widget(child, {attr: attr}) -}}
                <span class="form-choice__label">{{- child.vars.label|trans({}, translation_domain) -}}</span>
            </label>
        {% endfor %}
    {% endif %}
{% endblock choice_widget_expanded %}

{%- block choice_widget_collapsed -%}
    {%- set attr = attr|merge({'class': ('form__control select ' ~ attr.class|default(''))|trim}) -%}
    {{- parent() -}}
{%- endblock choice_widget_collapsed -%}

{%- block choice_widget_options -%}
    {% for group_label, choice in options %}
        {%- if choice is iterable -%}
            <optgroup label="{{ choice_translation_domain is same as(false) ? group_label : group_label|trans({}, choice_translation_domain) }}">
                {% set options = choice %}
                {{- block('choice_widget_options') -}}
            </optgroup>
        {%- else -%}
            <option value="{{ choice.value }}"{% if choice.attr %} {% set attr = choice.attr %}{{ block('attributes') }}{% endif %}{% if choice is selectedchoice(value) %} selected{% endif %}>{{ choice_translation_domain is same as(false) ? choice.label : choice.label|trans({}, choice_translation_domain) }}</option>
        {%- endif -%}
    {% endfor %}
{%- endblock choice_widget_options -%}

{% block checkbox_widget %}
    {% if checked is defined and checked is not empty and checked != false %}
        {% set attr = attr|merge({'checked': 'checked'}) %}
    {% endif %}

    {% if id is defined and id is not empty %}
        {% set attr = attr|merge({'id': id}) %}
    {% endif %}

    {% if value is defined and value is not empty %}
        {% set attr = attr|merge({'value': value}) %}
    {% endif %}

    {% set attr = attr|merge({'class': (attr.class|default('') ~ ' form__control')|trim}) %}

    {% if 'toggleswitch' not in block_prefixes %}
        {% set attr = attr|merge({'class': (attr.class|default('') ~ ' checkbox')|trim}) %}
    {% endif %}

    <input type="checkbox" {{ block('widget_attributes') }} />
{% endblock checkbox_widget %}

{% block choice_label %}
    {% if expanded %}
        {% set element = 'legend' %}
    {% endif %}
    {{ block('form_label') }}
{% endblock %}

{% block choice_row %}
    {% if expanded %}
        {% set group_element = 'fieldset' %}
    {% endif %}

    {% set group_attr = {'class': 'form-choice'} %}
    {{ block('form_row') }}
{% endblock choice_row %}

{% block checkbox_row %}
    {% set group_attr = {'class': 'form-checkbox'} %}
    {{ block('form_row') }}
{% endblock checkbox_row %}

{% block radio_widget %}
    {% if checked is defined and checked is not empty and checked != false %}
        {% set attr = attr|merge({'checked': 'checked'}) %}
    {% endif %}

    {% if id is defined and id is not empty %}
        {% set attr = attr|merge({'id': id}) %}
    {% endif %}

    {% if name is defined and name is not empty %}
        {% set attr = attr|merge({'name': name}) %}
    {% endif %}

    {% if value is defined and value is not empty %}
        {% set attr = attr|merge({'value': value}) %}
    {% endif %}
    {% set attr = attr|merge({'class': (attr.class|default('') ~ ' form__control radio')|trim}) %}
    <input type="radio" {{ block('widget_attributes') }} />
{% endblock radio_widget %}

{% block radio_row %}
    {% set group_attr = {'class': 'form-radio'} %}
    {{ block('form_row') }}
{% endblock radio_row %}

{% block range_row %}
    {% set group_attr = {'class': 'form-range'} %}
    {{ block('form_row') }}
{% endblock range_row %}

{%- block range_label -%}
    {% if required %}
        {# A range imput is not allowed the HTML5 `required` attribute. It will always send a value. #}
        {% set required = false %}
    {% endif %}
    {{ block('form_label') }}
{%- endblock range_label -%}

{% block range_widget %}
    {% if required %}
        {# A range imput is not allowed the HTML5 `required` attribute. It will always send a value. #}
        {% set required = false %}
    {% endif %}
    {{ parent() }}
{% endblock range_widget %}

{%- block date_widget -%}
    {%- if widget == 'single_text' -%}
        {# Force date widgets to be text for pickaday #}
        {%- set type = 'text' -%}
        {%- set attr = attr|merge({'data-append-icon': 'icon-calendar', 'data-datepicker': 'true', 'placeholder': attr.placeholder|default('dd/mm/yyyy')}) -%}
        {{- block('form_widget_simple') -}}
    {%- else -%}
        {{- date_pattern|replace({
            '{{ year }}':  form_label(form.year, null, {'label_attr': {'class': 'hide'} }) ~ form_widget(form.year, {'attr': {'class': 'form__control-col--1', 'placeholder': widget == 'choice' ? null : 'Year'} }),
            '{{ month }}': form_label(form.month, null, {'label_attr': {'class': 'hide'} }) ~ form_widget(form.month, {'attr': {'class': 'form__control-col--1', 'placeholder': widget == 'choice' ? null : 'Month'} }),
            '{{ day }}':   form_label(form.day, null, {'label_attr': {'class': 'hide'} }) ~ form_widget(form.day, {'attr': {'class': 'form__control-col--1', 'placeholder': widget == 'choice' ? null : 'Day'} }),
        })|raw -}}
    {%- endif -%}
{%- endblock date_widget -%}

{%- block date_label -%}
    {%- if widget != 'single_text' -%}
        {%- set element = 'legend' -%}
    {%- endif -%}
    {{ block('form_label') }}
{%- endblock date_label -%}

{%- block date_row -%}
    {%- if widget != 'single_text' -%}
        {%- set group_element = 'fieldset' -%}
        {%- set group_attr = {'class': 'form__group--compound'} -%}
    {%- endif -%}
    {{- block('form_row') -}}
{%- endblock date_row -%}

{%- block time_widget -%}
    {%- if widget == 'single_text' -%}
        {{ block('form_widget_simple') }}
    {%- else -%}
        {%- set vars = widget == 'text' ? { 'attr': { 'size': 1 } } : { 'attr' : {} } -%}
        {{- form_label(form.hour, null, {'label_attr': {'class': 'hide'} }) -}}
        {{- form_widget(form.hour, vars|merge({'attr': vars.attr|merge({'class': 'form__control-col--1', 'placeholder': widget == 'choice' ? null : 'Hours'})})) -}}
        {%- if with_minutes -%}<span class="padding-right">:</span>{{- form_label(form.minute, null, {'label_attr': {'class': 'hide'} }) -}}{{- form_widget(form.minute, vars|merge({'attr': vars.attr|merge({'class': 'form__control-col--1', 'placeholder': widget == 'choice' ? null : 'Minutes'})})) -}}{%- endif -%}
        {%- if with_seconds -%}<span class="padding-right">:</span>{{- form_label(form.second, null, {'label_attr': {'class': 'hide'} }) -}}{{- form_widget(form.second, vars|merge({'attr': vars.attr|merge({'class': 'form__control-col--1', 'placeholder': widget == 'choice' ? null : 'Seconds'})})) -}}{%- endif -%}
    {%- endif -%}
{%- endblock time_widget -%}

{%- block time_label -%}
    {%- if widget != 'single_text' -%}
        {%- set element = 'legend' -%}
    {%- endif -%}
    {{- block('form_label') -}}
{%- endblock time_label -%}

{%- block time_row -%}
    {% if widget != 'single_text' %}
        {% set group_element = 'fieldset' %}
        {% set group_attr = {'class': 'form__group--compound'} %}
    {% endif %}
    {{ block('form_row') }}
{%- endblock time_row -%}

{%- block datetime_widget -%}
    {% if widget == 'single_text' %}
        {{- block('form_widget_simple') -}}
    {%- else -%}
        {{- form_widget(form.date) -}}
        {{- form_widget(form.time) -}}
        {{- form_errors(form.date) -}}
        {{- form_errors(form.time) -}}
    {%- endif -%}
{%- endblock datetime_widget -%}

{%- block datetime_label -%}
    {% if widget != 'single_text' %}
        {% set element = 'legend' %}
    {% endif %}
    {{ block('form_label') }}
{%- endblock datetime_label -%}

{%- block dateinterval_label -%}
    {% if widget != 'single_text' %}
        {% set element = 'legend' %}
    {% endif %}
    {{ block('form_label') }}
{%- endblock dateinterval_label -%}

{%- block datetime_row -%}
    {% if widget != 'single_text' %}
        {% set group_element = 'fieldset' %}
        {% set group_attr = {'class': 'form__group--compound'} %}
    {% endif %}
    {{ block('form_row') }}
{%- endblock datetime_row -%}

{%- block dateinterval_widget -%}
    {%- if widget == 'single_text' -%}
        {{- block('form_widget_simple') -}}
    {%- else -%}
        {% set displays = {
            'years' : with_years,
            'months' : with_months,
            'weeks' : with_weeks,
            'days' : with_days,
            'hours' : with_hours,
            'minutes' : with_minutes,
            'seconds' : with_seconds,
        } %}
        {% for display, show in displays -%}
            {%- if show -%}
                <div class="input-group">
                    {{ form_label(form[display], null, {'label_attr': {'class': 'hide'} }) }}
                    {{ form_widget(form[display]) }}
                    <span class="input-group-addon">{{ display|capitalize }}</span>
                </div>
            {%- endif -%}
        {%- endfor %}
        {% if with_invert -%}
            <label class="control__label">
                {{ form_widget(form.invert) }}
                Invert
            </label>
        {%- endif %}
        {{- form_errors(form) -}}
    {%- endif -%}
{%- endblock dateinterval_widget -%}

{%- block dateinterval_row -%}
    {% if widget != 'single_text' %}
        {% set group_element = 'fieldset' %}
        {% set group_attr = {'class': 'form__group--compound form__control-col--2'} %}
    {% endif %}
    {{ block('form_row') }}
{%- endblock dateinterval_row -%}

{% block file_widget %}
    {%- set attr = attr|merge({'class': (attr.class|default('') ~ ' form__control file')|trim}) -%}
    {{- block('form_widget_simple') -}}
{% endblock file_widget %}

{% block money_widget -%}
    {% set prepend = not (money_pattern starts with '{{') %}
    {% set append = not (money_pattern ends with '}}') %}
    {% if prepend %}
        {% set attr = attr|merge({'data-prepend-text': money_pattern|form_encode_currency }) %}
    {% endif %}
    {% if append %}
        {% set attr = attr|merge({'data-append-text': money_pattern|form_encode_currency }) %}
    {% endif %}
    {{- block('form_widget_simple') -}}
{%- endblock money_widget %}

{% block percent_widget -%}
    {% set attr = attr|merge({'data-append-text': '%' }) %}
    {{- block('form_widget_simple') -}}
{%- endblock percent_widget %}

{%- block telephone_widget -%}
    {%- set type = type|default('tel') -%}
    {{ block('form_widget_simple') }}
{%- endblock telephone_widget -%}

{% block textarea_widget %}
    {% set attr = attr|merge({'class': (attr.class|default('') ~ ' form__control textarea')|trim}) %}
    {{ parent() }}
{% endblock textarea_widget %}

{% block toggleswitch_widget %}
    {% set attr = attr|merge({'class': (attr.class|default('') ~ ' form__control toggle-switch')|trim}) %}
    {{ block('checkbox_widget') }}
    <span class="toggle-switch-label"></span>
{% endblock toggleswitch_widget %}

{%- block toggleswitch_label -%}
    {% set element = 'span' %}
    {{ block('form_label') }}
{%- endblock toggleswitch_label -%}

{% block toggleswitch_row %}
    {% set group_attr = {'class': 'form__group--toggle'} %}
    {% set controlsElement = 'span' %}
    {{ block('form_row') }}
{% endblock toggleswitch_row %}

{% block color_widget %}
    {% set type = 'text' %}
    <div class="input-group">
        {{ parent() }}
    </div>
{% endblock color_widget %}

{% block color_row %}
    {% set group_attr = {'class': 'colorpicker', 'data-colour-picker': 'true', 'data-colour-picker-include-prefix': 'true'} %}
    {{ block('form_row') }}
{% endblock color_row %}

{# Need to copy this whole block in order to add the util.required etc #}
{%- block form_label -%}
    {% import '@pulsar/pulsar/v2/helpers/util.html.twig' as util %}
    {% if label is not same as(false) -%}
        {% set label_attr = label_attr|merge({'class': (label_attr.class|default('') ~ ' control__label')|trim}) %}
        {% if not compound and element|default('label') == 'label' -%}
            {% set label_attr = label_attr|merge({'for': id}) %}
        {%- endif -%}
        {% if label is empty -%}
            {%- if label_format is not empty -%}
                {% set label = label_format|replace({
                    '%name%': name,
                    '%id%': id,
                }) %}
            {%- else -%}
                {% set label = name|humanize %}
            {%- endif -%}
        {%- endif -%}
        <{{ element|default('label') }}{% if label_attr %}{% with { attr: label_attr } %}{{ block('attributes') }}{% endwith %}{% endif %}>
        {%- if translation_domain is same as(false) -%}
            {{- label -}}
        {%- else -%}
            {{- label|trans({}, translation_domain) -}}
        {%- endif -%}
        {{ util.required(required|default(false)) }}
        </{{ element|default('label') }}>
    {%- endif -%}
{%- endblock form_label -%}

{% block repeated_row %}
    {#
    No need to render the errors here, as all errors are mapped
    to the first child (see RepeatedTypeValidatorExtension).
    #}
    {{- block('form_rows_repeated') -}}
{% endblock repeated_row %}

{# Main form_row block, used to generate complete form rows including pulsar mark up and labels/fields#}
{% block form_row %}
    {% spaceless %}
        {% set group_attr = group_attr|default({})|merge({'class': 'form__group ' ~ group_attr.class|default('')|trim}) %}

        {% if errors|length > 0 %}
            {% set group_attr = group_attr|merge({'class': group_attr.class ~ ' has-error'}) %}
        {% endif %}

        <{{ group_element|default('div') }} {{ attributes(group_attr) }}>
            {% if 'toggleswitch' in block_prefixes %}
            <label class="toggle-switch-wrapper-label" for="{{ id }}">
            {% endif %}

            {{ form_label(form) }}

            <{{ controlsElement|default('div') }} class="controls">

                {% set describedByIds = [] %}

                {% if errors|length > 0 %}
                    {% set attr = attr|merge({ 'aria-invalid': 'true' }) %}

                    {% for error in errors %}
                        {% set describedByIds = describedByIds|merge([id ~ '--error_' ~ loop.index0] ) %}
                    {% endfor %}
                {% endif %}

                {%
                    if (attr['data-help-text'] is defined and attr['data-help-text'] is not null)
                    or (attr['data-help-html'] is defined and attr['data-help-html'] is not null)
                %}
                    {% set describedByIds = describedByIds|merge([id ~ '--help_text']) %}
                {% endif %}

                {% if describedByIds is not empty %}
                    {% set attr = attr|merge({ 'aria-describedby': describedByIds|join(' ') }) %}
                {% endif %}

                {{ form_widget(form, {attr: attr}) }}
                {{ form_errors(form) }}

                {% if attr['data-help-text'] is defined and attr['data-help-text'] is not null %}
                    <span class="help-block" id="{{ id ~ '--help_text' }}">{{ attr['data-help-text'] }}</span>
                {% elseif attr['data-help-html'] is defined and attr['data-help-html'] is not null %}
                    <span class="help-block" id="{{ id ~ '--help_text' }}">{{ attr['data-help-html']|raw }}</span>
                {% endif %}

            </{{ controlsElement|default('div') }}>

            {% if 'toggleswitch' in block_prefixes %}
            </label>
            {% endif %}
        </{{ group_element|default('div') }}>
    {% endspaceless %}
{% endblock form_row %}

{% block form_widget_simple -%}
    {%- set attr = attr|merge({'class': (attr.class|default('') ~ ' form__control')|trim}) -%}

    {#- Stop hidden fields having invalid required attibute -#}
    {%- if type is defined and type == 'hidden' -%}
        {%- set required = false -%}
    {%- endif -%}

    {%- if attr['data-prepend-text'] is defined or attr['data-append-text'] is defined or attr['data-prepend-icon'] is defined or attr['data-append-icon'] is defined -%}
        <div class="input-group">
            {% if attr['data-prepend-icon'] is defined %}
                <span class="input-group-addon"><i class="{{ attr['data-prepend-icon'] }} icon-fw"></i></span>
            {% endif %}
            {% if attr['data-prepend-text'] is defined %}
                <span class="input-group-addon">{{ attr['data-prepend-text'] }}</span>
            {% endif %}
    {%- endif -%}

    {{- parent() -}}

    {%- if attr['data-prepend-text'] is defined or attr['data-append-text'] is defined or attr['data-prepend-icon'] is defined or attr['data-append-icon'] is defined -%}
            {% if attr['data-append-text'] is defined %}
                <span class="input-group-addon">{{ attr['data-append-text'] }}</span>
            {% endif %}
            {% if attr['data-append-icon'] is defined %}
                <span class="input-group-addon"><i class="{{ attr['data-append-icon'] }} icon-fw"></i></span>
            {% endif %}
        </div>
    {%- endif -%}
{%- endblock form_widget_simple -%}

{% block button_row %}
    {{- form_widget(form) -}}
{% endblock button_row %}

{%- block button_widget -%}
    {% set attr = attr|merge({'class': 'btn ' ~ (attr.class|default(''))|trim}) %}
    {{ parent() }}
{%- endblock button_widget -%}

{# Misc #}

{%- block form_start -%}
    {% set attr = attr|merge({'class': (attr.skipDefaultClasses is not defined ? 'form' : '') ~ (attr.class is defined ? ' ' ~ attr.class : '')}) %}
    {{ parent() }}
{%- endblock form_start -%}

{% block form_errors %}
    {% spaceless %}
        {% for error in errors %}
            <p class="help-block is-error" id="{{ id ~ '--error_' ~ loop.index0 }}">
                <i aria-hidden="true" class="icon-warning-sign"></i> {{ error.message|trans }}
            </p>
        {% endfor %}
    {% endspaceless %}
{% endblock form_errors %}

{# Used when form_row is used to generate a group of compound fields, such as a group of check boxes #}
{% block form_rows %}
    {% spaceless %}
        {% for child in form %}
            <label class="control__label">
                {{ form_widget(child, {attr: attr}) }}
                {% if child.vars.label is defined and child.vars.label is not empty %}
                    {{- child.vars.label|trans({}, translation_domain) -}}
                {% else %}
                    {{- child.vars.name|trans({}, translation_domain) -}}
                {% endif %}
            </label>
        {% endfor %}
    {% endspaceless %}
{% endblock form_rows %}

{# Used when form_row is used to generate a group of repeated fields, such as 2 text inputs #}
{% block form_rows_repeated %}
    {% spaceless %}
        {% for child in form %}
            {{ form_row(child, {attr: repeated_attr is defined ? repeated_attr : {}}) }}
        {% endfor %}
    {% endspaceless %}
{% endblock form_rows_repeated %}

{%- block widget_attributes -%}
    {% set attr = attr|merge({'id': id, 'name': full_name, 'disabled': disabled, 'required': required}) %}
    {{ block('attributes') }}
{%- endblock widget_attributes -%}

{%- block widget_container_attributes -%}
    {%- if id is not empty %}
        {% set attr = attr|merge({'id': id}) %}
    {% endif -%}
    {{ block('attributes') }}
{%- endblock widget_container_attributes -%}

{%- block button_attributes -%}
    {% set attr = attr|merge({'id': id, 'name': name, 'disabled': disabled}) %}
    {{ block('attributes') }}
{%- endblock button_attributes -%}

{% block attributes -%}
    {% set print_attr = {} %}
    {%- for attrname, attrvalue in attr -%}
        {%- if attrname in ['placeholder', 'title'] -%}
            {% set print_attr = print_attr|merge({(attrname): translation_domain is same as(false) ? attrvalue : attrvalue|trans({}, translation_domain)}) %}
        {% else %}
            {% set print_attr = print_attr|merge({(attrname): attrvalue}) %}
        {%- endif -%}
    {%- endfor -%}
    {{ attributes(print_attr|exclude('data-help-text data-guidance-container data-guidance-text data-append-text data-prepend-text')) }}
{%- endblock attributes -%}

"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6791],{9916:(e,t,n)=>{n.d(t,{xA:()=>u,yg:()=>f});var a=n(3696);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var o=a.createContext({}),c=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(o.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,l=e.originalType,o=e.parentName,u=r(e,["components","mdxType","originalType","parentName"]),p=c(n),m=i,f=p["".concat(o,".").concat(m)]||p[m]||d[m]||l;return n?a.createElement(f,s(s({ref:t},u),{},{components:n})):a.createElement(f,s({ref:t},u))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=n.length,s=new Array(l);s[0]=m;var r={};for(var o in t)hasOwnProperty.call(t,o)&&(r[o]=t[o]);r.originalType=e,r[p]="string"==typeof e?e:i,s[1]=r;for(var c=2;c<l;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5589:(e,t,n)=>{n.d(t,{A:()=>s});var a=n(3696),i=n(8017);const l={tabItem:"tabItem_wHwb"};function s(e){let{children:t,hidden:n,className:s}=e;return a.createElement("div",{role:"tabpanel",className:(0,i.A)(l.tabItem,s),hidden:n},t)}},2752:(e,t,n)=>{n.d(t,{A:()=>O});var a=n(8102),i=n(3696),l=n(8017),s=n(766),r=n(9519),o=n(5043),c=n(4544),u=n(8708);function p(e){return function(e){return i.Children.map(e,(e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:i}}=e;return{value:t,label:n,attributes:a,default:i}}))}function d(e){const{values:t,children:n}=e;return(0,i.useMemo)((()=>{const e=t??p(n);return function(e){const t=(0,c.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:n}=e;const a=(0,r.W6)(),l=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,o.aZ)(l),(0,i.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(a.location.search);t.set(l,e),a.replace({...a.location,search:t.toString()})}),[l,a])]}function y(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,l=d(e),[s,r]=(0,i.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:l}))),[o,c]=f({queryString:n,groupId:a}),[p,y]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,l]=(0,u.Dv)(n);return[a,(0,i.useCallback)((e=>{n&&l.set(e)}),[n,l])]}({groupId:a}),h=(()=>{const e=o??p;return m({value:e,tabValues:l})?e:null})();(0,i.useLayoutEffect)((()=>{h&&r(h)}),[h]);return{selectedValue:s,selectValue:(0,i.useCallback)((e=>{if(!m({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);r(e),c(e),y(e)}),[c,y,l]),tabValues:l}}var h=n(6681);const b={tabList:"tabList_J5MA",tabItem:"tabItem_l0OV"};function g(e){let{className:t,block:n,selectedValue:r,selectValue:o,tabValues:c}=e;const u=[],{blockElementScrollPositionUntilNextRender:p}=(0,s.a_)(),d=e=>{const t=e.currentTarget,n=u.indexOf(t),a=c[n].value;a!==r&&(p(t),o(a))},m=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=u.indexOf(e.currentTarget)+1;t=u[n]??u[0];break}case"ArrowLeft":{const n=u.indexOf(e.currentTarget)-1;t=u[n]??u[u.length-1];break}}t?.focus()};return i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.A)("tabs",{"tabs--block":n},t)},c.map((e=>{let{value:t,label:n,attributes:s}=e;return i.createElement("li",(0,a.A)({role:"tab",tabIndex:r===t?0:-1,"aria-selected":r===t,key:t,ref:e=>u.push(e),onKeyDown:m,onClick:d},s,{className:(0,l.A)("tabs__item",b.tabItem,s?.className,{"tabs__item--active":r===t})}),n??t)})))}function v(e){let{lazy:t,children:n,selectedValue:a}=e;const l=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===a));return e?(0,i.cloneElement)(e,{className:"margin-top--md"}):null}return i.createElement("div",{className:"margin-top--md"},l.map(((e,t)=>(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function w(e){const t=y(e);return i.createElement("div",{className:(0,l.A)("tabs-container",b.tabList)},i.createElement(g,(0,a.A)({},e,t)),i.createElement(v,(0,a.A)({},e,t)))}function O(e){const t=(0,h.A)();return i.createElement(w,(0,a.A)({key:String(t)},e))}},1877:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>f,frontMatter:()=>r,metadata:()=>c,toc:()=>p});var a=n(8102),i=(n(3696),n(9916)),l=n(2752),s=n(5589);const r={id:"status",title:"Status",sidebar_label:"Status"},o=void 0,c={unversionedId:"components/status",id:"components/status",title:"Status",description:"Displays a small visual indication of state; helpful when used within table cells or piano list keys to avoid the need for a user to check many items individually to determine their state.",source:"@site/docs/components/status.mdx",sourceDirName:"components",slug:"/components/status",permalink:"/pulsar/docs/components/status",draft:!1,tags:[],version:"current",frontMatter:{id:"status",title:"Status",sidebar_label:"Status"},sidebar:"tutorialSidebar",previous:{title:"Remove Button",permalink:"/pulsar/docs/components/remove-button"},next:{title:"Table",permalink:"/pulsar/docs/components/table"}},u={},p=[{value:"Basic usage",id:"basic-usage",level:2},{value:"States",id:"states",level:2},{value:"Accessibility",id:"accessibility",level:2}],d={toc:p},m="wrapper";function f(e){let{components:t,...n}=e;return(0,i.yg)(m,(0,a.A)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("p",null,"Displays a small visual indication of state; helpful when used within table cells or piano list keys to avoid the need for a user to check many items individually to determine their state."),(0,i.yg)("p",null,"Status indicators should ideally have some text which indicates their context. For example, they could be sat next to a text label called \u2018Active\u2019, or within a table column entitled \u2018Online\u2019. Try not to rely on this indicator alone."),(0,i.yg)("div",{className:"d-example"},(0,i.yg)("p",null,(0,i.yg)("span",{"data-tippy-placement":"top","data-tippy-content":"online",className:"status is-online"},(0,i.yg)("span",{className:"hide"},"online"))," Online"),(0,i.yg)("p",null,(0,i.yg)("i",{"data-tippy-placement":"top","data-tippy-content":"online",className:"icon-check-circle status--icon is-online"},(0,i.yg)("span",{className:"hide"},"online"))," Online with icon"),(0,i.yg)("p",null,(0,i.yg)("span",{"data-tippy-placement":"top","data-tippy-content":"offline",className:"status is-offline"},(0,i.yg)("span",{className:"hide"},"offline"))," Offline"),(0,i.yg)("p",null,(0,i.yg)("i",{"data-tippy-placement":"top","data-tippy-content":"offline",className:"icon-times-rectangle status--icon is-offline"},(0,i.yg)("span",{className:"hide"},"offline"))," Offline with icon"),(0,i.yg)("p",null,(0,i.yg)("span",{"data-tippy-placement":"top","data-tippy-content":"inactive",className:"status is-inactive"},(0,i.yg)("span",{className:"hide"},"inactive"))," I am inactive")),(0,i.yg)("h2",{id:"basic-usage"},"Basic usage"),(0,i.yg)("admonition",{type:"tip"},(0,i.yg)("p",{parentName:"admonition"},"The examples here are laid out using paragraphs, usually you will be using the status component inline with existing elements so you don\u2019t need to copy the paragraphs.")),(0,i.yg)(l.A,{groupID:"example",defaultValue:"twig",values:[{label:"Twig",value:"twig"},{label:"HTML",value:"html"}],mdxType:"Tabs"},(0,i.yg)(s.A,{value:"twig",mdxType:"TabItem"},(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-twig"},"<p>{{ html.status('online') }} Online</p>\n<p>{{ html.status('online', { icon: true }) }} Online with icon</p>\n<p>{{ html.status('offline') }} Offline</p>\n<p>{{ html.status('offline', { icon: true }) }} Offline with icon</p>\n<p>{{ html.status('inactive') }} I am inactive</p>\n"))),(0,i.yg)(s.A,{value:"html",mdxType:"TabItem"},(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-html"},'<p><span data-tippy-placement="top" data-tippy-content="online"  class="status is-online"><span class="hide">online</span></span> Online</p>\n<p><i data-tippy-placement="top" data-tippy-content="online"  class="icon-check-circle status--icon is-online"><span class="hide">online</span></i> Online with icon</p>\n<p><span data-tippy-placement="top" data-tippy-content="offline"  class="status is-offline"><span class="hide">offline</span></span> Offline</p>\n<p><i data-tippy-placement="top" data-tippy-content="offline"  class="icon-times-rectangle status--icon is-offline"><span class="hide">offline</span></i> Offline with icon</p>\n<p><span data-tippy-placement="top" data-tippy-content="inactive"  class="status is-inactive"><span class="hide">inactive</span></span> I am inactive</p>\n')))),(0,i.yg)("h2",{id:"states"},"States"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"online (default)"),(0,i.yg)("li",{parentName:"ul"},"offline"),(0,i.yg)("li",{parentName:"ul"},"active"),(0,i.yg)("li",{parentName:"ul"},"inactive")),(0,i.yg)("p",null,"Some states are simply synonyms of each other, the choice of verb will be defined by the context in which it is to be used."),(0,i.yg)("p",null,"The \u2018state\u2019 will be used for both the title attribute, and for the stateful class name."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-html"},'<span class="status is-online" title="online"></span>\n')),(0,i.yg)("h2",{id:"accessibility"},"Accessibility"),(0,i.yg)("p",null,"You may notice \u2018offline\u2019 uses a square instead of a circle, this is to visually distinguish it from the green \u2018online\u2019 status for red/green colourblind users as colour alone isn\u2019t a reliable indicator of status. The title attribute is also added which is displayed on hover and for screen readers."),(0,i.yg)("blockquote",null,(0,i.yg)("p",{parentName:"blockquote"},"\u2026ensure that all users can access information that is conveyed by color differences, that is, by the use of color where each color has a meaning assigned to it. If the information is conveyed through color differences in an image (or other non-text format), the color may not be seen by users with color deficiencies. In this case, providing the information conveyed with color through another visual means ensures users who cannot see color can still perceive the information. ",(0,i.yg)("a",{parentName:"p",href:"http://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast-without-color.html"},"WCAG 2.0 Guideline 1.4.1"))))}f.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5521],{9916:(e,a,t)=>{t.d(a,{xA:()=>u,yg:()=>p});var l=t(3696);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function o(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);a&&(l=l.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,l)}return t}function i(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?o(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function s(e,a){if(null==e)return{};var t,l,n=function(e,a){if(null==e)return{};var t,l,n={},o=Object.keys(e);for(l=0;l<o.length;l++)t=o[l],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(l=0;l<o.length;l++)t=o[l],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var r=l.createContext({}),d=function(e){var a=l.useContext(r),t=a;return e&&(t="function"==typeof e?e(a):i(i({},a),e)),t},u=function(e){var a=d(e.components);return l.createElement(r.Provider,{value:a},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var a=e.children;return l.createElement(l.Fragment,{},a)}},g=l.forwardRef((function(e,a){var t=e.components,n=e.mdxType,o=e.originalType,r=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=d(t),g=n,p=m["".concat(r,".").concat(g)]||m[g]||c[g]||o;return t?l.createElement(p,i(i({ref:a},u),{},{components:t})):l.createElement(p,i({ref:a},u))}));function p(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var o=t.length,i=new Array(o);i[0]=g;var s={};for(var r in a)hasOwnProperty.call(a,r)&&(s[r]=a[r]);s.originalType=e,s[m]="string"==typeof e?e:n,i[1]=s;for(var d=2;d<o;d++)i[d]=t[d];return l.createElement.apply(null,i)}return l.createElement.apply(null,t)}g.displayName="MDXCreateElement"},5589:(e,a,t)=>{t.d(a,{A:()=>i});var l=t(3696),n=t(8017);const o={tabItem:"tabItem_wHwb"};function i(e){let{children:a,hidden:t,className:i}=e;return l.createElement("div",{role:"tabpanel",className:(0,n.A)(o.tabItem,i),hidden:t},a)}},2752:(e,a,t)=>{t.d(a,{A:()=>N});var l=t(8102),n=t(3696),o=t(8017),i=t(766),s=t(9519),r=t(5043),d=t(4544),u=t(8708);function m(e){return function(e){return n.Children.map(e,(e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:a}=e;return!!a&&"object"==typeof a&&"value"in a}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:a,label:t,attributes:l,default:n}}=e;return{value:a,label:t,attributes:l,default:n}}))}function c(e){const{values:a,children:t}=e;return(0,n.useMemo)((()=>{const e=a??m(t);return function(e){const a=(0,d.X)(e,((e,a)=>e.value===a.value));if(a.length>0)throw new Error(`Docusaurus error: Duplicate values "${a.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[a,t])}function g(e){let{value:a,tabValues:t}=e;return t.some((e=>e.value===a))}function p(e){let{queryString:a=!1,groupId:t}=e;const l=(0,s.W6)(),o=function(e){let{queryString:a=!1,groupId:t}=e;if("string"==typeof a)return a;if(!1===a)return null;if(!0===a&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:a,groupId:t});return[(0,r.aZ)(o),(0,n.useCallback)((e=>{if(!o)return;const a=new URLSearchParams(l.location.search);a.set(o,e),l.replace({...l.location,search:a.toString()})}),[o,l])]}function h(e){const{defaultValue:a,queryString:t=!1,groupId:l}=e,o=c(e),[i,s]=(0,n.useState)((()=>function(e){let{defaultValue:a,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(a){if(!g({value:a,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${a}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return a}const l=t.find((e=>e.default))??t[0];if(!l)throw new Error("Unexpected error: 0 tabValues");return l.value}({defaultValue:a,tabValues:o}))),[r,d]=p({queryString:t,groupId:l}),[m,h]=function(e){let{groupId:a}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(a),[l,o]=(0,u.Dv)(t);return[l,(0,n.useCallback)((e=>{t&&o.set(e)}),[t,o])]}({groupId:l}),y=(()=>{const e=r??m;return g({value:e,tabValues:o})?e:null})();(0,n.useLayoutEffect)((()=>{y&&s(y)}),[y]);return{selectedValue:i,selectValue:(0,n.useCallback)((e=>{if(!g({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);s(e),d(e),h(e)}),[d,h,o]),tabValues:o}}var y=t(6681);const b={tabList:"tabList_J5MA",tabItem:"tabItem_l0OV"};function f(e){let{className:a,block:t,selectedValue:s,selectValue:r,tabValues:d}=e;const u=[],{blockElementScrollPositionUntilNextRender:m}=(0,i.a_)(),c=e=>{const a=e.currentTarget,t=u.indexOf(a),l=d[t].value;l!==s&&(m(a),r(l))},g=e=>{let a=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=u.indexOf(e.currentTarget)+1;a=u[t]??u[0];break}case"ArrowLeft":{const t=u.indexOf(e.currentTarget)-1;a=u[t]??u[u.length-1];break}}a?.focus()};return n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":t},a)},d.map((e=>{let{value:a,label:t,attributes:i}=e;return n.createElement("li",(0,l.A)({role:"tab",tabIndex:s===a?0:-1,"aria-selected":s===a,key:a,ref:e=>u.push(e),onKeyDown:g,onClick:c},i,{className:(0,o.A)("tabs__item",b.tabItem,i?.className,{"tabs__item--active":s===a})}),t??a)})))}function v(e){let{lazy:a,children:t,selectedValue:l}=e;const o=(Array.isArray(t)?t:[t]).filter(Boolean);if(a){const e=o.find((e=>e.props.value===l));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return n.createElement("div",{className:"margin-top--md"},o.map(((e,a)=>(0,n.cloneElement)(e,{key:a,hidden:e.props.value!==l}))))}function w(e){const a=h(e);return n.createElement("div",{className:(0,o.A)("tabs-container",b.tabList)},n.createElement(f,(0,l.A)({},e,a)),n.createElement(v,(0,l.A)({},e,a)))}function N(e){const a=(0,y.A)();return n.createElement(w,(0,l.A)({key:String(a)},e))}},4884:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>u,contentTitle:()=>r,default:()=>p,frontMatter:()=>s,metadata:()=>d,toc:()=>m});var l=t(8102),n=(t(3696),t(9916)),o=t(2752),i=t(5589);const s={id:"modal",title:"Modal",sidebar_label:"Modal"},r=void 0,d={unversionedId:"components/modal",id:"components/modal",title:"Modal",description:"Modal windows, also known as dialogs or overlays are UI components that sit on top of the current page, usually with a semi-transparent layer behind them to separate them from the main page.",source:"@site/docs/components/modal.mdx",sourceDirName:"components",slug:"/components/modal",permalink:"/pulsar/docs/components/modal",draft:!1,tags:[],version:"current",frontMatter:{id:"modal",title:"Modal",sidebar_label:"Modal"},sidebar:"tutorialSidebar",previous:{title:"Metadata",permalink:"/pulsar/docs/components/metadata"},next:{title:"Pagination",permalink:"/pulsar/docs/components/pagination"}},u={},m=[{value:"When to use a modal",id:"when-to-use-a-modal",level:2},{value:"When not to use a modal",id:"when-not-to-use-a-modal",level:2},{value:"Basic usage",id:"basic-usage",level:2},{value:"Accessibility",id:"accessibility",level:2},{value:"ARIA requirements",id:"aria-requirements",level:3},{value:"Focus management",id:"focus-management",level:3},{value:"On open",id:"on-open",level:4},{value:"Trap focus",id:"trap-focus",level:4},{value:"On close",id:"on-close",level:4},{value:"Opening Modals",id:"opening-modals",level:2},{value:"Opening a modal from an existing modal",id:"opening-a-modal-from-an-existing-modal",level:3},{value:"Closing modals",id:"closing-modals",level:2},{value:"Javascript methods",id:"javascript-methods",level:2},{value:".modal(options)",id:"modaloptions",level:3},{value:"Toggle",id:"toggle",level:3},{value:"Show",id:"show",level:3},{value:"Hide",id:"hide",level:3},{value:"Javascript events",id:"javascript-events",level:2}],c={toc:m},g="wrapper";function p(e){let{components:a,...t}=e;return(0,n.yg)(g,(0,l.A)({},c,t,{components:a,mdxType:"MDXLayout"}),(0,n.yg)("p",null,"Modal windows, also known as dialogs or overlays are UI components that sit on top of the current page, usually with a semi-transparent layer behind them to separate them from the main page."),(0,n.yg)("p",null,"Modals disable interaction with the rest of the page and force the user to first interact with the modal window. Modals are great for allowing a user to stay in the context of the current UI while being able to perform related actions without interrupting the workflow on the main page."),(0,n.yg)("h2",{id:"when-to-use-a-modal"},"When to use a modal"),(0,n.yg)("p",null,"Modals are useful in many situations, where sending the user to another page might be disruptive. They should almost exclusively be triggered by user interaction. The purpose of the modal should be immediately apparent to the user."),(0,n.yg)("p",null,"Read ",(0,n.yg)("a",{parentName:"p",href:"https://medium.com/pulsar/modern-enterprise-ui-design-part-2-modal-dialogs-2ccd3cc33c92"},"our Medium post")," for more information and examples."),(0,n.yg)("h2",{id:"when-not-to-use-a-modal"},"When not to use a modal"),(0,n.yg)("p",null,"As modal windows block the user from interacting with the rest of the page, they should only be used when redirecting the user would break the flow of the interaction or task at hand. Misused, they can very quickly become annoying to the user to the point where they form a habit of dismissing them on instinct."),(0,n.yg)("p",null,"\u274c  When the user hasn\u2019t triggered the modal"),(0,n.yg)("p",null,"Randomly showing a modal is a jarring experience and confusing for the user. The only exception to this would be a time-critical notification, such as a session time out or expiry warning."),(0,n.yg)("p",null,"\u274c  Prompting users to complete unrelated tasks"),(0,n.yg)("p",null,"Asking a user to complete their profile when viewing customer information and potentially on the phone to a customer isn\u2019t good for anyone."),(0,n.yg)("p",null,"\u274c  To display large amounts of data"),(0,n.yg)("p",null,"Modals by design are often smaller than the main page. Therefore they are less than ideal when you need to display a large amount of data."),(0,n.yg)("p",null,"\u274c  To display error messages"),(0,n.yg)("p",null,"Don\u2019t use a modal to display error or success messages relating to actions performed on the main page."),(0,n.yg)("p",null,"\u274c  To display long forms"),(0,n.yg)("p",null,"Space is limited so displaying a long form in a modal should be avoided. Consider breaking the form down into simpler steps and the use of a multi-stage modal."),(0,n.yg)("p",null,"\u274c  When another modal is already is view"),(0,n.yg)("p",null,"Spawning a modal from another modal or showing additional modals when one is already displayed should be avoided. Multiple modals are confusing for the user and create accessibility and usability issues."),(0,n.yg)("p",null,"\u274c  To capture data unrelated to the users\u2019 actions"),(0,n.yg)("p",null,"Don\u2019t fall into the trap of using modals for everything. Very often, directing the user to a different page is the right solution. Use modals sparsely to enhance the experience."),(0,n.yg)("h2",{id:"basic-usage"},"Basic usage"),(0,n.yg)("admonition",{type:"tip"},(0,n.yg)("p",{parentName:"admonition"},"The following example uses the ",(0,n.yg)("inlineCode",{parentName:"p"},".show")," class to make sure the modal is visible in the documentation, you should not use this class if you want your modal hidden on page load.")),(0,n.yg)("div",{className:"d-example"},(0,n.yg)("div",{className:"modal show",id:"myModal",role:"dialog","aria-modal":"true","aria-labelledby":"myModal-title","aria-describedby":"myModal-description",tabIndex:"-1"},(0,n.yg)("div",{className:"modal__dialog"},(0,n.yg)("div",{className:"modal__content"},(0,n.yg)("div",{className:"modal__header"},(0,n.yg)("button",{type:"button",className:"close","data-dismiss":"modal","aria-label":"Close modal dialog"},(0,n.yg)("span",{"aria-hidden":"true"},"\xd7")),(0,n.yg)("h1",{className:"modal__title",id:"myModal-title"},"A simple example")),(0,n.yg)("div",{className:"modal__body"},(0,n.yg)("p",{id:"myModal-description",className:"hide"},"Here goes a short description (a couple of lines) about the modal\u2019s purpose, if needed."),(0,n.yg)("p",null,"The modal body might have instructions, a form, or other stuff.")),(0,n.yg)("div",{className:"modal__footer"},(0,n.yg)("button",{type:"button",className:"btn btn--primary"},"Save Changes"),(0,n.yg)("button",{type:"button",className:"btn btn--naked","data-dismiss":"modal"},"Cancel")))))),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-html"},'<div className="modal show" id="myModal" role="dialog" aria-modal="true" aria-labelledby="myModal-title" aria-describedby="myModal-description" tabIndex="-1">\n    <div className="modal__dialog">\n      <div className="modal__content">\n        <div className="modal__header">\n          <button type="button" className="close" data-dismiss="modal" aria-label="Close modal dialog"><span aria-hidden="true">\xd7</span></button>\n          <h1 className="modal__title" id="myModal-title">A simple example</h1>\n        </div>\n        <div className="modal__body">\n          <p id="myModal-description" className="hide">Here goes a short description (a couple of lines) about the modal\u2019s purpose, if needed.</p>\n          <p>The modal body might have instructions, a form, or other stuff.</p>\n        </div>\n        <div className="modal__footer">\n          <button type="button" className="btn btn--primary">Save Changes</button>\n          <button type="button" className="btn btn--naked" data-dismiss="modal">Cancel</button>\n        </div>\n      </div>\n    </div>\n  </div>\n')),(0,n.yg)("h2",{id:"accessibility"},"Accessibility"),(0,n.yg)("p",null,"Refer to the ",(0,n.yg)("a",{parentName:"p",href:"http://accessibility-guide.ntn.jadu.net/components/links/"},"Jadu Accessibility Guidelines (internal)")," for detailed guidance on the accessibility requirements of this component."),(0,n.yg)("h3",{id:"aria-requirements"},"ARIA requirements"),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Attribute"),(0,n.yg)("th",null,"Applies to"),(0,n.yg)("th",null,"Outcome"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,(0,n.yg)("code",null,'role="dialog"')),(0,n.yg)("td",null,(0,n.yg)("code",null,".modal")),(0,n.yg)("td",null,"Identifies the element that serves as the modal container. ",(0,n.yg)("span",{className:"label label--primary"},"Required"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,(0,n.yg)("code",null,'aria-modal="true"')),(0,n.yg)("td",null,(0,n.yg)("code",null,".modal")),(0,n.yg)("td",null,"Tells assistive technologies that the content under the current modal is not available for interaction. ",(0,n.yg)("span",{className:"label label--primary"},"Required"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,(0,n.yg)("code",null,'aria-labelledby="[id value of .modal__title]"')),(0,n.yg)("td",null,(0,n.yg)("code",null,".modal")),(0,n.yg)("td",null,"Gives the modal an accessible name by referring to the element that provides the dialog title. ",(0,n.yg)("span",{className:"label label--primary"},"Required"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,(0,n.yg)("code",null,'aria-describedby="[id value of applicable content]"')),(0,n.yg)("td",null,(0,n.yg)("code",null,".modal")),(0,n.yg)("td",null,"Gives the modal an accessible description by referring to the modal content that describes the primary message or purpose of the dialog. Not used if there is no static text that describes the modal. ",(0,n.yg)("span",{className:"label"},"optional"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,(0,n.yg)("code",null,'aria-label="Close modal dialog"')),(0,n.yg)("td",null,(0,n.yg)("code",null,".close")),(0,n.yg)("td",null,"Provides an accessible name for the close button as it uses an icon instead of text. ",(0,n.yg)("span",{className:"label label--primary"},"Required"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,(0,n.yg)("code",null,'aria-hidden="true"')),(0,n.yg)("td",null,(0,n.yg)("code",null,"Close icon or added to a wrapping span where \xd7 is used")),(0,n.yg)("td",null,"Hides the close icon or X from screen readers. ",(0,n.yg)("span",{className:"label label--primary"},"Required"))))),(0,n.yg)("h3",{id:"focus-management"},"Focus management"),(0,n.yg)("h4",{id:"on-open"},"On open"),(0,n.yg)("p",null,"Focus should move to the first interactive element, often the first form input or the close button."),(0,n.yg)("h4",{id:"trap-focus"},"Trap focus"),(0,n.yg)("p",null,"Focus should be trapped within the modal dialog. It should not be possible to navigate to any elements underneath the modal via the keyboard."),(0,n.yg)("p",null,"When Tab is pressed on the last tabbable element, it should loop back to the first (generally the close button). When Tab + Shift is pressed on the first tabbable element, focus should loop to the last tabbable element."),(0,n.yg)("h4",{id:"on-close"},"On close"),(0,n.yg)("p",null,"In addition to the standard X close button and cancel button, Escape should also close the modal dialog. Focus shoud return to the element that triggered the modal."),(0,n.yg)("p",null,"The above behaviour is included in Pulsar by default. If you are using an alternative UI framework other than the markup above, you will need to ensure you include this behaviour. See the WAI ARIA authoring practices on dialogs for more details."),(0,n.yg)("h2",{id:"opening-modals"},"Opening Modals"),(0,n.yg)("p",null,"Typically, a modal will be opened when the user interacts with an action within the user interface, usually a button rather than a link (as the user doesn't navigate to another page)."),(0,n.yg)(o.A,{groupID:"example",defaultValue:"twig",values:[{label:"Twig",value:"twig"},{label:"HTML",value:"html"}],mdxType:"Tabs"},(0,n.yg)(i.A,{value:"twig",mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-twig"},'{{\n  html.button({\n    \'label\': \'Show Example Modal\',\n    \'data-toggle\': \'modal\',\n    \'data-target\': \'#modal-example\'\n  })\n}}\n\n<div class="modal" id="modal-example" role="dialog" aria-modal="true" aria-labelledby="myModal-title" aria-describedby="myModal-description" tabindex="-1">\n  ...\n</div>\n'))),(0,n.yg)(i.A,{value:"html",mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-html"},'<button data-toggle="modal" data-target="#modal-example" class="btn">Show Example Modal</button>\n\n<div class="modal" id="modal-example" role="dialog" aria-modal="true" aria-labelledby="myModal-title" aria-describedby="myModal-description" tabindex="-1">\n  ...\n</div>\n')))),(0,n.yg)("h3",{id:"opening-a-modal-from-an-existing-modal"},"Opening a modal from an existing modal"),(0,n.yg)("p",null,"There will be times where a modal contains an action that requires a different modal to be presented to the user. This is possible, however there are a couple of important considerations to note."),(0,n.yg)("p",null,"When modal-1 opens modal-2, you should:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Close modal-1 (do not visually stack modals)"),(0,n.yg)("li",{parentName:"ul"},"Return the user to modal-1 if they cancel out of modal-2"),(0,n.yg)("li",{parentName:"ul"},"Consider if the actions within modal-2 (such as cancel) should return the user to modal-1, or back to the main user interface")),(0,n.yg)("p",null,"For a button to both close an existing modal, and open a new one, you should use both the ",(0,n.yg)("inlineCode",{parentName:"p"},"data-dismiss")," and the ",(0,n.yg)("inlineCode",{parentName:"p"},"data-toggle")," attributes."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-twig"},"{{\n    html.button({\n        'label': 'Open Modal Two',\n        'data-dismiss': 'modal',\n        'data-toggle': 'modal',\n        'data-target': '#modal-two'\n    })\n}}\n")),(0,n.yg)("h2",{id:"closing-modals"},"Closing modals"),(0,n.yg)("p",null,"A button within a modal (or indeed anywhere within the UI) can close itself using the ",(0,n.yg)("inlineCode",{parentName:"p"},'data-dismiss="modal"')," attribute. ",(0,n.yg)("inlineCode",{parentName:"p"},"Escape")," should also close the modal dialog."),(0,n.yg)("admonition",{type:"caution"},(0,n.yg)("p",{parentName:"admonition"},"Avoid using a link with an empty href attribute ",(0,n.yg)("inlineCode",{parentName:"p"},'<a href="#"...')," as this will throw accessibility warnings in some automated a11y testing tools. Remember, if an action goes somewhere, use a link, if it does something, use a button.")),(0,n.yg)(o.A,{groupID:"example",defaultValue:"twig",values:[{label:"Twig",value:"twig"},{label:"HTML",value:"html"}],mdxType:"Tabs"},(0,n.yg)(i.A,{value:"twig",mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-twig"},"{{\n  html.button({\n    'label': 'Cancel',\n    'class': 'btn--naked',\n    'data-dismiss': 'modal'\n  })\n}}\n"))),(0,n.yg)(i.A,{value:"html",mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-html"},'<button data-dismiss="modal" class="btn btn--naked">Cancel</button>\n')))),(0,n.yg)("h2",{id:"javascript-methods"},"Javascript methods"),(0,n.yg)("h3",{id:"modaloptions"},".modal(options)"),(0,n.yg)("p",null,"Activates your content as a modal. Accepts an optional options object."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-js"},"$('#myModal').modal({\n  keyboard: false\n})\n")),(0,n.yg)("h3",{id:"toggle"},"Toggle"),(0,n.yg)("p",null,"Manually toggles a modal. Returns to the caller before the modal has actually been shown or hidden (i.e. before the ",(0,n.yg)("inlineCode",{parentName:"p"},"shown.bs.modal")," or ",(0,n.yg)("inlineCode",{parentName:"p"},"hidden.bs.modal")," event occurs)."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-js"},"$('#myModal').modal('toggle')\n")),(0,n.yg)("h3",{id:"show"},"Show"),(0,n.yg)("p",null,"Manually opens a modal. Returns to the caller before the modal has actually been shown (i.e. before the ",(0,n.yg)("inlineCode",{parentName:"p"},"shown.bs.modal")," event occurs)."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-js"},"$('#myModal').modal('show')\n")),(0,n.yg)("h3",{id:"hide"},"Hide"),(0,n.yg)("p",null,"Manually hides a modal. Returns to the caller before the modal has actually been hidden (i.e. before the ",(0,n.yg)("inlineCode",{parentName:"p"},"hidden.bs.modal")," event occurs)."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-js"},"$('#myModal').modal('hide')\n")),(0,n.yg)("h2",{id:"javascript-events"},"Javascript events"),(0,n.yg)("p",null,"The modal class exposes a few events for hooking into modal functionality. All modal events are fired at the modal itself (i.e. at the ",(0,n.yg)("inlineCode",{parentName:"p"},'<div id="myModal" class="modal">'),")."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-js"},"$('#myModal').on('show.bs.modal', function (e) {\n  // do something...\n});\n")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Event"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,(0,n.yg)("code",null,"show.bs.modal")),(0,n.yg)("td",null,"This event fires immediately when the show instance method is called. If caused by a click, the clicked element is available as the ",(0,n.yg)("code",null,"relatedTarget")," property of the event")),(0,n.yg)("tr",null,(0,n.yg)("td",null,(0,n.yg)("code",null,"shown.bs.modal")),(0,n.yg)("td",null,"This event is fired when the modal has been made visible to the user (will wait for CSS transitions to complete). If caused by a click, the clicked element is available as the relatedTarget property of the event")),(0,n.yg)("tr",null,(0,n.yg)("td",null,(0,n.yg)("code",null,"hide.bs.modal")),(0,n.yg)("td",null,"This event is fired immediately when the hide instance method has been called")),(0,n.yg)("tr",null,(0,n.yg)("td",null,(0,n.yg)("code",null,"hidden.bs.modal")),(0,n.yg)("td",null,"This event is fired when the modal has finished being hidden from the user (will wait for CSS transitions to complete)")))))}p.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[396],{9916:(e,t,a)=>{a.d(t,{xA:()=>d,yg:()=>m});var n=a(3696);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var r=n.createContext({}),u=function(e){var t=n.useContext(r),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=u(e.components);return n.createElement(r.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},b=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,i=e.originalType,r=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),c=u(a),b=l,m=c["".concat(r,".").concat(b)]||c[b]||p[b]||i;return a?n.createElement(m,o(o({ref:t},d),{},{components:a})):n.createElement(m,o({ref:t},d))}));function m(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=a.length,o=new Array(i);o[0]=b;var s={};for(var r in t)hasOwnProperty.call(t,r)&&(s[r]=t[r]);s.originalType=e,s[c]="string"==typeof e?e:l,o[1]=s;for(var u=2;u<i;u++)o[u]=a[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}b.displayName="MDXCreateElement"},5589:(e,t,a)=>{a.d(t,{A:()=>o});var n=a(3696),l=a(8017);const i={tabItem:"tabItem_wHwb"};function o(e){let{children:t,hidden:a,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,l.A)(i.tabItem,o),hidden:a},t)}},2752:(e,t,a)=>{a.d(t,{A:()=>w});var n=a(8102),l=a(3696),i=a(8017),o=a(766),s=a(9519),r=a(5043),u=a(4544),d=a(8708);function c(e){return function(e){return l.Children.map(e,(e=>{if(!e||(0,l.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:l}}=e;return{value:t,label:a,attributes:n,default:l}}))}function p(e){const{values:t,children:a}=e;return(0,l.useMemo)((()=>{const e=t??c(a);return function(e){const t=(0,u.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function b(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:a}=e;const n=(0,s.W6)(),i=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,r.aZ)(i),(0,l.useCallback)((e=>{if(!i)return;const t=new URLSearchParams(n.location.search);t.set(i,e),n.replace({...n.location,search:t.toString()})}),[i,n])]}function g(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,i=p(e),[o,s]=(0,l.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!b({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:i}))),[r,u]=m({queryString:a,groupId:n}),[c,g]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,i]=(0,d.Dv)(a);return[n,(0,l.useCallback)((e=>{a&&i.set(e)}),[a,i])]}({groupId:n}),y=(()=>{const e=r??c;return b({value:e,tabValues:i})?e:null})();(0,l.useLayoutEffect)((()=>{y&&s(y)}),[y]);return{selectedValue:o,selectValue:(0,l.useCallback)((e=>{if(!b({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);s(e),u(e),g(e)}),[u,g,i]),tabValues:i}}var y=a(6681);const h={tabList:"tabList_J5MA",tabItem:"tabItem_l0OV"};function v(e){let{className:t,block:a,selectedValue:s,selectValue:r,tabValues:u}=e;const d=[],{blockElementScrollPositionUntilNextRender:c}=(0,o.a_)(),p=e=>{const t=e.currentTarget,a=d.indexOf(t),n=u[a].value;n!==s&&(c(t),r(n))},b=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const a=d.indexOf(e.currentTarget)+1;t=d[a]??d[0];break}case"ArrowLeft":{const a=d.indexOf(e.currentTarget)-1;t=d[a]??d[d.length-1];break}}t?.focus()};return l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":a},t)},u.map((e=>{let{value:t,label:a,attributes:o}=e;return l.createElement("li",(0,n.A)({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,key:t,ref:e=>d.push(e),onKeyDown:b,onClick:p},o,{className:(0,i.A)("tabs__item",h.tabItem,o?.className,{"tabs__item--active":s===t})}),a??t)})))}function f(e){let{lazy:t,children:a,selectedValue:n}=e;const i=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=i.find((e=>e.props.value===n));return e?(0,l.cloneElement)(e,{className:"margin-top--md"}):null}return l.createElement("div",{className:"margin-top--md"},i.map(((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function N(e){const t=g(e);return l.createElement("div",{className:(0,i.A)("tabs-container",h.tabList)},l.createElement(v,(0,n.A)({},e,t)),l.createElement(f,(0,n.A)({},e,t)))}function w(e){const t=(0,y.A)();return l.createElement(N,(0,n.A)({key:String(t)},e))}},9215:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>m,frontMatter:()=>s,metadata:()=>u,toc:()=>c});var n=a(8102),l=(a(3696),a(9916)),i=a(2752),o=a(5589);const s={id:"button",title:"Button",sidebar_label:"Button"},r=void 0,u={unversionedId:"components/button",id:"components/button",title:"Button",description:"Pulsar buttons are an all purpose user interface element allowing users to perform actions, submit forms and progress through transactions.",source:"@site/docs/components/button.mdx",sourceDirName:"components",slug:"/components/button",permalink:"/pulsar/docs/components/button",draft:!1,tags:[],version:"current",frontMatter:{id:"button",title:"Button",sidebar_label:"Button"},sidebar:"tutorialSidebar",previous:{title:"Button group",permalink:"/pulsar/docs/components/button-group"},next:{title:"Card",permalink:"/pulsar/docs/components/card"}},d={},c=[{value:"Basic usage",id:"basic-usage",level:2},{value:"Helper options",id:"helper-options",level:2},{value:"Accessibility",id:"accessibility",level:2},{value:"Labelling your button",id:"labelling-your-button",level:2},{value:"Using icons",id:"using-icons",level:2},{value:"Button types",id:"button-types",level:2},{value:"Link button",id:"link-button",level:3},{value:"Input button",id:"input-button",level:3},{value:"Submit button",id:"submit-button",level:3},{value:"Disabled buttons",id:"disabled-buttons",level:3},{value:"Adding tooltips to disabled buttons",id:"adding-tooltips-to-disabled-buttons",level:4}],p={toc:c},b="wrapper";function m(e){let{components:t,...a}=e;return(0,l.yg)(b,(0,n.A)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,l.yg)("p",null,"Pulsar buttons are an all purpose user interface element allowing users to perform actions, submit forms and progress through transactions."),(0,l.yg)("div",{className:"d-example"},(0,l.yg)("button",{className:"btn"},"My Action")),(0,l.yg)("h2",{id:"basic-usage"},"Basic usage"),(0,l.yg)(i.A,{groupID:"example",defaultValue:"twig",values:[{label:"Twig",value:"twig"},{label:"React",value:"react"},{label:"HTML",value:"html"}],mdxType:"Tabs"},(0,l.yg)(o.A,{value:"twig",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-twig"},"{{\n    html.button({\n        'label': 'My Action'\n    })\n}}\n"))),(0,l.yg)(o.A,{value:"react",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-jsx"},"<Button>My Action</Button>\n"))),(0,l.yg)(o.A,{value:"html",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-html"},'<button class="btn">My Action</button>\n')))),(0,l.yg)("h2",{id:"helper-options"},"Helper options"),(0,l.yg)("p",null,"You can configure this helper using the common helper options, the following options are specific to this helper."),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Option"),(0,l.yg)("th",{parentName:"tr",align:null},"Type"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"type"),(0,l.yg)("td",{parentName:"tr",align:null},"string"),(0,l.yg)("td",{parentName:"tr",align:null},"Type of button to create, can be ",(0,l.yg)("inlineCode",{parentName:"td"},"button")," (default), ",(0,l.yg)("inlineCode",{parentName:"td"},"link"),", ",(0,l.yg)("inlineCode",{parentName:"td"},"input")," or ",(0,l.yg)("inlineCode",{parentName:"td"},"submit"))))),(0,l.yg)("h2",{id:"accessibility"},"Accessibility"),(0,l.yg)("p",null,"Refer to the ",(0,l.yg)("a",{parentName:"p",href:"http://accessibility-guide.ntn.jadu.net/components/buttons/"},"Jadu Accessibility Guidelines (internal)")," for detailed guidance on the accessibility requirements of this component."),(0,l.yg)("h2",{id:"labelling-your-button"},"Labelling your button"),(0,l.yg)("p",null,"The text label you use for a button should be clear enough for any user to understand what will happen if the user clicks the button, don't rely on colour alone to indicate whether this is a primary or dangerous action, the label is the most important piece of information."),(0,l.yg)("p",null,"If the button relates to an action, the label should ideally be a verb, use the common state classes to reinforce dangerous or destructive actions with colour, but don't rely on colour alone to communicate a button\u2019s intention."),(0,l.yg)("div",{className:"d-example"},(0,l.yg)("button",{className:"btn btn--primary"},"New Thing")," ",(0,l.yg)("button",{className:"btn btn--primary"},"Save")," ",(0,l.yg)("button",{className:"btn"},"Edit")," ",(0,l.yg)("button",{className:"btn"},"Copy")," ",(0,l.yg)("button",{className:"btn"},"Show")," ",(0,l.yg)("button",{className:"btn"},"Hide"),"  ",(0,l.yg)("button",{className:"btn btn--danger"},"Delete")),(0,l.yg)("p",null,"Other recommendations for labelling your buttons include:"),(0,l.yg)("div",{className:"d-guidelines"},(0,l.yg)("div",{className:"d-guidelines__block d-guidelines__block--do"},(0,l.yg)("div",{className:"d-guidelines-preview"},(0,l.yg)("button",{className:"btn btn--primary"},"New Document")),(0,l.yg)("div",{className:"d-guidelines-label"},(0,l.yg)("em",{className:"d-guidelines-label__title"},"Do")," use title case")),(0,l.yg)("div",{className:"d-guidelines__block d-guidelines__block--not"},(0,l.yg)("div",{className:"d-guidelines-preview"},(0,l.yg)("button",{className:"btn btn--primary"},"New document")," ",(0,l.yg)("button",{className:"btn btn--danger"},"DELETE")),(0,l.yg)("div",{className:"d-guidelines-label"},(0,l.yg)("em",{className:"d-guidelines-label__title"},"Don\u2019t")," use sentence case or all caps"))),(0,l.yg)("div",{className:"d-guidelines"},(0,l.yg)("div",{className:"d-guidelines__block d-guidelines__block--do"},(0,l.yg)("div",{className:"d-guidelines-preview"},(0,l.yg)("button",{className:"btn btn--primary"},"New Event")),(0,l.yg)("div",{className:"d-guidelines-label"},(0,l.yg)("em",{className:"d-guidelines-label__title"},"Do")," use a text only label for primary actions, unless explicitly required for the UI")),(0,l.yg)("div",{className:"d-guidelines__block d-guidelines__block--not"},(0,l.yg)("div",{className:"d-guidelines-preview"},(0,l.yg)("button",{className:"btn btn--primary"},(0,l.yg)("i",{"aria-hidden":"true",className:"icon-plus"})," Create Event")),(0,l.yg)("div",{className:"d-guidelines-label"},(0,l.yg)("em",{className:"d-guidelines-label__title"},"Don\u2019t")," add icons to primary actions"))),(0,l.yg)("p",null,"If an action relates to creating new items of content, use 'New', Do not use 'Create' or 'Create New'. "),(0,l.yg)("div",{className:"d-example"},(0,l.yg)("button",{className:"btn btn--primary"},"New Thing")),(0,l.yg)("p",null,"If a button triggers more than one action you should communicate the chain of events to the user, ideally in the order in which they will happen. This helps users to build a mental model of what is happening when they push a button."),(0,l.yg)("div",{className:"d-example"},(0,l.yg)("button",{className:"btn btn--primary"},"Save Changes and Publish Now")," ",(0,l.yg)("button",{className:"btn btn--primary"},"Save Changes and Submit for Proofing")," ",(0,l.yg)("button",{className:"btn btn--danger"},"Reset Password and Notify User")),(0,l.yg)("h2",{id:"using-icons"},"Using icons"),(0,l.yg)("p",null,"If your button is labelled using only an icon, you must supply an appropriate descriptive label to be announced by screenreaders, either by the icon's ",(0,l.yg)("inlineCode",{parentName:"p"},"label")," option, or using ",(0,l.yg)("inlineCode",{parentName:"p"},"aria-label"),"."),(0,l.yg)("div",{className:"d-example"},(0,l.yg)("button",{className:"btn"},(0,l.yg)("i",{className:"icon-plus"},(0,l.yg)("span",{className:"hide"},"Add to list"))),"\xa0",(0,l.yg)("button",{className:"btn","aria-label":"Add to list"},(0,l.yg)("i",{className:"icon-plus"}))),(0,l.yg)(i.A,{groupID:"example",defaultValue:"twig",values:[{label:"Twig",value:"twig"},{label:"React",value:"react"},{label:"HTML",value:"html"}],mdxType:"Tabs"},(0,l.yg)(o.A,{value:"twig",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-twig"},"{{\n    html.button({\n        'label': html.icon('plus', { 'label': 'Add to list' })\n    })\n}}\n\n{{\n    html.button({\n        'label': html.icon('plus'),\n        'aria-label': 'Add to list'\n    })\n}}\n"))),(0,l.yg)(o.A,{value:"react",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-jsx"},'<Button className="btn">\n  <i className="icon-plus">\n    <span className="hide">Add to list</span>\n  </i>\n</Button>\n\n<Button className="btn" aria-label="Add to list">\n  <i className="icon-plus"></i>\n</Button>\n'))),(0,l.yg)(o.A,{value:"html",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-html"},'<button class="btn">\n  <i class="icon-plus">\n    <span class="hide">Add to list</span>\n  </i>\n</button>\n\n<button class="btn" aria-label="Add to list">\n  <i class="icon-plus"></i>\n</button>\n')))),(0,l.yg)("h2",{id:"button-types"},"Button types"),(0,l.yg)("p",null,"The underlying HTML element you use for a button is an important choice, particularly for accessibility reasons, and your choice will usually be based on the type of action you wish to perform. In most cases this can usually be determined by this simple rule:"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"if the button ",(0,l.yg)("em",{parentName:"li"},"goes somewhere"),", it should be a link"),(0,l.yg)("li",{parentName:"ul"},"if the button ",(0,l.yg)("em",{parentName:"li"},"does something"),", it should be a button")),(0,l.yg)("admonition",{title:"Accessibility tip",type:"tip"},(0,l.yg)("p",{parentName:"admonition"},"If you absolutely have to use a link for a button that ",(0,l.yg)("em",{parentName:"p"},"does something"),", you should add the following affordances:"),(0,l.yg)("ul",{parentName:"admonition"},(0,l.yg)("li",{parentName:"ul"},"add the ",(0,l.yg)("inlineCode",{parentName:"li"},'aria-role="button"')," attribute to make the element announce itself as a button rather than a link"),(0,l.yg)("li",{parentName:"ul"},"add a javascript event handler to be triggered when the user presses the ",(0,l.yg)("inlineCode",{parentName:"li"},"space")," key, as regular buttons will be triggered on both ",(0,l.yg)("inlineCode",{parentName:"li"},"enter")," and ",(0,l.yg)("inlineCode",{parentName:"li"},"space"),", but regular links will not"))),(0,l.yg)("h3",{id:"link-button"},"Link button"),(0,l.yg)(i.A,{groupID:"example",defaultValue:"twig",values:[{label:"Twig",value:"twig"},{label:"React",value:"react"},{label:"HTML",value:"html"}],mdxType:"Tabs"},(0,l.yg)(o.A,{value:"twig",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-twig"},"{{\n    html.button({\n        'label': 'Next',\n        'class': 'btn--primary',\n        'type': 'link',\n        'href': '/path/to/destination'\n    })\n}}\n"))),(0,l.yg)(o.A,{value:"react",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-jsx"},'<Button \n  className="btn btn--primary" \n  type="link" \n  href="/path/to/destination">Next</Button>\n'))),(0,l.yg)(o.A,{value:"html",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-html"},'<a class="btn btn--primary" href="/path/to/destination">Next</a>\n')))),(0,l.yg)("h3",{id:"input-button"},"Input button"),(0,l.yg)("p",null,"Only for use within forms, and you should have a really good reason not to use a regular ",(0,l.yg)("inlineCode",{parentName:"p"},"button"),"."),(0,l.yg)(i.A,{groupID:"example",defaultValue:"twig",values:[{label:"Twig",value:"twig"},{label:"React",value:"react"},{label:"HTML",value:"html"}],mdxType:"Tabs"},(0,l.yg)(o.A,{value:"twig",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-twig"},"{{\n    html.button({\n        'label': 'Add Keyword',\n        'type': 'input'\n    })\n}}\n"))),(0,l.yg)(o.A,{value:"react",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-jsx"},'<Button type="input">Add Keyword</Button>\n'))),(0,l.yg)(o.A,{value:"html",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-html"},'<input type="button" value="Add Keyword" class="btn" />\n')))),(0,l.yg)("h3",{id:"submit-button"},"Submit button"),(0,l.yg)("p",null,"Should only be used to submit forms, if you're building a Pulsar styled form you can use standard submit controls with the form end component."),(0,l.yg)(i.A,{groupID:"example",defaultValue:"twig",values:[{label:"Twig",value:"twig"},{label:"React",value:"react"},{label:"HTML",value:"html"}],mdxType:"Tabs"},(0,l.yg)(o.A,{value:"twig",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-twig"},"{{\n    html.button({\n        'label': 'Submit',\n        'type': 'submit'\n    })\n}}\n"))),(0,l.yg)(o.A,{value:"react",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-jsx"},'<Button type="submit">Submit</Button>\n'))),(0,l.yg)(o.A,{value:"html",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-html"},'<input type="submit" class="btn">Submit</input>\n')))),(0,l.yg)("h3",{id:"disabled-buttons"},"Disabled buttons"),(0,l.yg)("p",null,"If an action is unavailable you can disable the button, the common ",(0,l.yg)("inlineCode",{parentName:"p"},".is-disabled")," class will visually style the disabled state."),(0,l.yg)("p",null,"If you're not using the Twig or React helpers, you must make sure the following is applied to your button when disabled:"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"if using ",(0,l.yg)("inlineCode",{parentName:"li"},"button"),", ",(0,l.yg)("inlineCode",{parentName:"li"},"input")," or ",(0,l.yg)("inlineCode",{parentName:"li"},"submit")," type, add the ",(0,l.yg)("inlineCode",{parentName:"li"},"disabled")," attribute"),(0,l.yg)("li",{parentName:"ul"},"if using ",(0,l.yg)("inlineCode",{parentName:"li"},"link")," type, add the ",(0,l.yg)("inlineCode",{parentName:"li"},'aria-disabled="true"')," attribute")),(0,l.yg)("admonition",{title:"Accessibility tip",type:"tip"},(0,l.yg)("p",{parentName:"admonition"},"Disabled buttons cannot be focused with the keyboard so will be invisible to screenreaders, this behaviour may be desired, or you may need to choose another UI pattern if you feel screenreader users need to always be aware that a button is present. Consider your use cases carefully.")),(0,l.yg)("h4",{id:"adding-tooltips-to-disabled-buttons"},"Adding tooltips to disabled buttons"),(0,l.yg)("p",null,"The disabled attribute prevents mouse events from firing and stops tooltips from working entirely, the only way around this which works for all our supported browsers is to wrap the button in a containing ",(0,l.yg)("inlineCode",{parentName:"p"},"div")," and attach the tooltip to that element."),(0,l.yg)("div",{className:"d-example"},(0,l.yg)("div",{"data-tippy-content":"Can\u2019t touch this",tabIndex:"0",className:"u-display-inline-block"},(0,l.yg)("button",{disabled:"disabled",className:"btn is-disabled"},"Disabled Button"))),(0,l.yg)(i.A,{groupID:"example",defaultValue:"twig",values:[{label:"Twig",value:"twig"},{label:"React",value:"react"},{label:"HTML",value:"html"}],mdxType:"Tabs"},(0,l.yg)(o.A,{value:"twig",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-twig"},"<div data-tippy-content=\"Can\u2019t touch this\" tabindex=\"0\" class=\"u-display-inline-block\">\n  {{ \n    html.button({\n      'label': 'Disabled Button',\n      'disabled': true\n    })\n  }}\n</div>\n"))),(0,l.yg)(o.A,{value:"react",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-jsx"},'<div data-tippy-content="Can\u2019t touch this" tabIndex="0" className="u-display-inline-block">\n  <Button disabled>Disabled Button</Button>\n</div>\n'))),(0,l.yg)(o.A,{value:"html",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-html"},'<div data-tippy-content="Can\u2019t touch this" tabindex="0" class="u-display-inline-block">\n  <button disabled="disabled" class="btn is-disabled">Disabled Button</button>\n</div>\n')))))}m.isMDXComponent=!0}}]);